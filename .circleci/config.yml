# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  #python: circleci/python@2.1.1
  snyk: snyk/snyk@1.5.0
  docker: circleci/docker@1.7.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  scan python dependencies:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      #- image: cimg/base:stable
      - image: cimg/python:3.7
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run: 
          name: "install python dependencies"
          command: |
               pip install -r requirements.txt
      - snyk/install:
          install-alpine-dependencies: true 
          token-variable: SYNK_TOKEN
      - snyk/scan:
          fail-on-issues: false
          target-file: requirements.txt 
          #project: Team04/tree/circleci-project-setup
          token-variable: SYNK_TOKEN
  Docker-build:
    docker:
      # replace with your preferred image
      - image: cimg/base:stable
    steps:
      - setup_remote_docker
      - checkout
     # - docker/build:
      #    dockerfile: Dockerfile
       #   image: python-app 
        #  tag: latest 
      - run:
          name: Docker-build_image
          command: |
           docker build -t python-app:latest .
           docker images
           docker run -itd -p 8000:80 python-app
           
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - scan python dependencies
      - Docker-build
